{"output":"\n ***** :: [31mUsage: terraform init [options] [DIR]\n ***** :: \n ***** :: Initialize a new or existing Terraform working directory by creating\n ***** :: initial files, loading any remote state, downloading modules, etc.\n ***** :: \n ***** :: This is the first command that should be run for any new or existing\n ***** :: Terraform configuration per machine. This sets up all the local data\n ***** :: necessary to run Terraform that is typically not committed to version\n ***** :: control.\n ***** :: \n ***** :: This command is always safe to run multiple times. Though subsequent runs\n ***** :: may give errors, this command will never delete your configuration or\n ***** :: state. Even so, if you have important information, please back it up prior\n ***** :: to running this command, just in case.\n ***** :: \n ***** :: If no arguments are given, the configuration in this working directory\n ***** :: is initialized.\n ***** :: \n ***** :: Options:\n ***** :: \n ***** :: -backend=true        Configure the backend for this configuration.\n ***** :: \n ***** :: -backend-config=path This can be either a path to an HCL file with key\/value\n ***** :: assignments (same format as terraform.tfvars) or a\n ***** :: 'key=value' format. This is merged with what is in the\n ***** :: configuration file. This can be specified multiple\n ***** :: times. The backend type must be in the configuration\n ***** :: itself.\n ***** :: \n ***** :: -force-copy          Suppress prompts about copying state data. This is\n ***** :: equivalent to providing a \"yes\" to all confirmation\n ***** :: prompts.\n ***** :: \n ***** :: -from-module=SOURCE  Copy the contents of the given module into the target\n ***** :: directory before initialization.\n ***** :: \n ***** :: -get=true            Download any modules for this configuration.\n ***** :: \n ***** :: -get-plugins=true    Download any missing plugins for this configuration.\n ***** :: \n ***** :: -input=true          Ask for input if necessary. If false, will error if\n ***** :: input was required.\n ***** :: \n ***** :: -lock=true           Lock the state file when locking is supported.\n ***** :: \n ***** :: -lock-timeout=0s     Duration to retry a state lock.\n ***** :: \n ***** :: -no-color            If specified, output won't contain any color.\n ***** :: \n ***** :: -plugin-dir          Directory containing plugin binaries. This overrides all\n ***** :: default search paths for plugins, and prevents the\n ***** :: automatic installation of plugins. This flag can be used\n ***** :: multiple times.\n ***** :: \n ***** :: -reconfigure         Reconfigure the backend, ignoring any saved\n ***** :: configuration.\n ***** :: \n ***** :: -upgrade=false       If installing modules (-get) or plugins (-get-plugins),\n ***** :: ignore previously-downloaded objects and install the\n ***** :: latest version allowed within configured constraints.\n ***** :: \n ***** :: -verify-plugins=true Verify the authenticity and integrity of automatically\n ***** :: downloaded plugins.\u001B[0m\u001B[0m\n ***** :: \n ***** :: Error: Error loading modules: module infra: not found, may need to run 'terraform init'\n ***** :: \n ***** :: \n ***** :: \n ***** :: Error: Error loading modules: module infra: not found, may need to run 'terraform init'\n ***** :: \n ***** :: ","status":"false"}